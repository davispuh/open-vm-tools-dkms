From b806233fd55dfff2bbde0a0109b41837eee32a80 Mon Sep 17 00:00:00 2001
From: lotan <lotan@gmx.de>
Date: Tue, 12 May 2015 14:47:15 +0200
Subject: [PATCH] Support backing dev info, kernel 4.0.

---
 open-vm-tools/modules/linux/vmhgfs/filesystem.c | 15 +++++++++++++++
 open-vm-tools/modules/linux/vmhgfs/module.h     |  4 ++++
 open-vm-tools/modules/linux/vmhgfs/super.c      |  3 +++
 3 files changed, 22 insertions(+)

diff --git a/open-vm-tools/modules/linux/vmhgfs/filesystem.c b/open-vm-tools/modules/linux/vmhgfs/filesystem.c
index 33c4c56..5b458e1 100644
--- a/open-vm-tools/modules/linux/vmhgfs/filesystem.c
+++ b/open-vm-tools/modules/linux/vmhgfs/filesystem.c
@@ -386,8 +386,20 @@ HgfsReadSuper(struct super_block *sb, // OUT: Superblock object
       return PTR_ERR(si);
    }
    HGFS_SET_SB_TO_COMMON(sb, si);
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+   result = bdi_setup_and_register(&si->bdi, "vmhgfs");
+   if (result) {
+      kfree(si->shareName);
+      kfree(si);
+   }
+#endif
+
    sb->s_magic = HGFS_SUPER_MAGIC;
    sb->s_op = &HgfsSuperOperations;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+   sb->s_bdi = &si->bdi;
+#endif
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 38)
    sb->s_d_op = &HgfsDentryOperations;
@@ -427,6 +439,9 @@ HgfsReadSuper(struct super_block *sb, // OUT: Superblock object
   exit:
    if (result) {
       dput(rootDentry);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+      bdi_destroy(&si->bdi);
+#endif
       kfree(si->shareName);
       kfree(si);
    }
diff --git a/open-vm-tools/modules/linux/vmhgfs/module.h b/open-vm-tools/modules/linux/vmhgfs/module.h
index 9c12332..e394b5f 100644
--- a/open-vm-tools/modules/linux/vmhgfs/module.h
+++ b/open-vm-tools/modules/linux/vmhgfs/module.h
@@ -29,6 +29,7 @@
 #include "driver-config.h"
 
 #include <asm/atomic.h>
+#include <linux/backing-dev.h>
 #include "compat_fs.h"
 #include "compat_semaphore.h"
 #include "compat_slab.h"
@@ -130,6 +131,9 @@ typedef struct HgfsSuperInfo {
    uint32 ttl;                      /* Maximum dentry age (in ticks). */
    char *shareName;                 /* Mounted share name. */
    size_t shareNameLen;             /* To avoid repeated strlen() calls. */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+   struct backing_dev_info bdi;
+#endif
 } HgfsSuperInfo;
 
 /*
diff --git a/open-vm-tools/modules/linux/vmhgfs/super.c b/open-vm-tools/modules/linux/vmhgfs/super.c
index 04a2192..41f8713 100644
--- a/open-vm-tools/modules/linux/vmhgfs/super.c
+++ b/open-vm-tools/modules/linux/vmhgfs/super.c
@@ -152,6 +152,9 @@ HgfsPutSuper(struct super_block *sb) // IN: The superblock
 
    si = HGFS_SB_TO_COMMON(sb);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 0, 0)
+   bdi_destroy(&si->bdi);
+#endif
    kfree(si->shareName);
    kfree(si);
 }
-- 
2.3.6

